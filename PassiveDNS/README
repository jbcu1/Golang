Данный архив представляет собой неоконченную версию системы pDNS.
Что умеет данная программа:
* Собирать все свежие домены с domain-status.com, разбивая каждую доменную зону по папкам. Структура сбора распределения собранных реузльтатов такова:
Создается папка: pars_result/
Внутри этой папки создаются две папки: links_pars_result, main_page_pars_result.
Результаты получения всех доменов с главной страницы индексируется числом и находятся в папке pars_result/links_pars_result, запуска парсера, например 2021-01-07. Результат парсинга главной страницы будет сохранен в json файле в формате 2021-01-07.json в папке pars_result/main_page_pars_result. Чтобы запустить данную функцию необходимо запустить программу с флагом -p:
go run main.go -p

* Собирать все архивированные страницы с domain-status.com. Функция сбора ссылок по доменным ссылкам не был реализован из-за слишком частого отказа сервера(500 ответ). Результат сбора начальных страниц архивированных страниц находится в папке: pars_result/start_page_pars_result/{2021-01-07}/{2021-01-07}.json. Чтобы запустить данную функцию необходимо запустить программу с флагом -pS:
go run main.go -pS

* Сбор информации о каждом домене с пользовательским выбором. Программа предложит ввести путь до основной папки, где хранятся собранные домены. Функция программы поддерживает многопоточность( задается флагом -c). После сбора информации о каждом домене программа направляет массив собранных данный на индексирование в эластик. Чтобы запустить данную функицю необоходимо запустить программу с флагом -g:
go run main.go -g

* Сбор информации из листа Tranco. Программа копирует лист и собирает информацию о хостах, добавочный тег Identifier = "tranco_top". Расположение листа pars_result/tranco_result. Функция программы поддерживает многопоточность( задается флагом -c). Чтобы запустить данную функицю необоходимо запустить программу с флагом -gT:
go run main.go -gT

Работа с kafka:

В папке kafka реализованны две функции Consumer & Producer. Функция Producer поддерживает многопоточность, задается флагом -kc. В данных функциях закомментированы методы логирования:
l := log.New(os.Stdout, "kafka writer: ", 0)
Функция KafkaProducer в пакете main позволяет загружать хосты, которые были собранны в этот день.
Функция KafkaProducerWithChoice позволяет загружать хосты, выбранные пользователем. Выбор осуществляется по тому же принципу, что и при сборе информации о хостах с флагом -g. Данную функцию необходимо запускать с функцией -kC, таким образом вызов программы будет выглядеть так:
go run main.go -kC -kPC

Функция KafkaConsumer реализует группу потребителей для чтения из очереди кафки. Данная функция складывает в каналы хосты, как ключ, и сообщение, реализованное в виде "источник, {теги}". Из канала хостов мы перекладываем их в канал для сбора информации о хостах(поддерживает многопоточность). Данные по собранным доменам формируются в массив размером 15000 записей, после чего отправляются на индексирование в эластик. К сожалению, решения для отправки сообщения в полезный сбор данных придуман не был, поэтому он просто печатается в терминале для корректной работы программы.
